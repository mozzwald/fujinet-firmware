name: FujiNet PlatformIO CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        target-platform: [ATARI]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Check if include/version.h changed
      id: changed-files-specific
      uses: tj-actions/changed-files@v13.1
      with:
        files: include/version.h
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Install espressif32 platform
      run: pio platform install espressif32 --with-package=framework-espidf

    - name: Show python version
      run: python --version
    - name: Show pio system info
      run: pio system info
    - name: Show pio location
      run: pip show platformio

    - name: Create INI
      run: cp /home/runner/work/fujinet-platformio/fujinet-platformio/platformio-sample.ini /home/runner/work/fujinet-platformio/fujinet-platformio/platformio.ini

    - name: Select PLATFORM for Build
      run: sed -i "s/^;\{0,1\}build_platform = BUILD_${{ matrix.target-platform }}/build_platform = BUILD_${{ matrix.target-platform }}/" /home/runner/work/fujinet-platformio/fujinet-platformio/platformio.ini

    - name: Fix up dirent.h top
      run: gawk -i inplace '1;/#include\ <stdint.h>/{print "\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n"}' /home/runner/.platformio/packages/framework-espidf/components/newlib/platform_include/sys/dirent.h

    - name: Fix up dirent.h bottom
      run: printf "\n\n\n#ifdef __cplusplus\n}\n#endif\n\n" >> /home/runner/.platformio/packages/framework-espidf/components/newlib/platform_include/sys/dirent.h

    - name: Verify dirent.h bottom
      run: tail -n 10 /home/runner/.platformio/packages/framework-espidf/components/newlib/platform_include/sys/dirent.h
    - name: Verify dirent.h top
      run: head -n 30 /home/runner/.platformio/packages/framework-espidf/components/newlib/platform_include/sys/dirent.h

    - name: Run PlatformIO Build
      run: pio run 

    - name: Build Filesystem
      run: pio run -t buildfs -e fujinet-v1

    - name: Show Build Artifacts
      run: ls -la .pio/build/fujinet-v1/*.bin

    - name: Get FujiNet version Number
      run: echo "::set-output name=version::$(grep "FN_VERSION_FULL" include/version.h | cut -d '"' -f 2)"
      id: version

    - name: Create SHASUMS, release.zip and release.json
      if: ${{ steps.changed-files-specific.outputs.any_changed == 'true' }}
      run: sh .github/workflows/release.sh ${{ matrix.target-platform }} ${{ steps.version.outputs.version }}

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v2.3.1
      with:
        name: fujinet-${{ matrix.target-platform }}-${{ steps.version.outputs.version }}
        path: |
          .pio/build/fujinet-v1/release.json
          .pio/build/fujinet-v1/sha256sums
          .pio/build/fujinet-v1/bootloader.bin
          .pio/build/fujinet-v1/firmware.bin
          .pio/build/fujinet-v1/partitions.bin
          .pio/build/fujinet-v1/spiffs.bin
          .pio/build/fujinet-v1/boot_app0.bin
    
    - name: Get Git Short Hash
      id: shortsha
      run: echo "::set-output name=shortsha::$(git rev-parse --short HEAD)"

    - name: Create Release
      if: ${{ steps.changed-files-specific.outputs.any_changed == 'true' }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.shortsha.outputs.shortsha }}
        release_name: ${{ steps.version.outputs.version }}
        body: "FujiNet build for ${{ matrix.target-platform }} - ${{ steps.version.outputs.version }}"
        
    - name: Upload binaries to release
      if: ${{ steps.changed-files-specific.outputs.any_changed == 'true' }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: fujinet-${{ matrix.target-platform }}-${{ steps.version.outputs.version }}.zip
        asset_name: fujinet-${{ matrix.target-platform }}-${{ steps.version.outputs.version }}.zip
        tag: ${{ steps.shortsha.outputs.shortsha }}

    - name: Upload JSON to release
      if: ${{ steps.changed-files-specific.outputs.any_changed == 'true' }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release.json
        asset_name: release-${{ matrix.target-platform }}.json
        tag: ${{ steps.shortsha.outputs.shortsha }}

    - name: Notify FujiNet server
      run: sh -c 'echo "wget https://fujinet.online/?githash=${{ steps.shortsha.outputs.shortsha }}&version=${{ steps.version.outputs.version }}&platform=${{ matrix.target-platform }}"'
# end
